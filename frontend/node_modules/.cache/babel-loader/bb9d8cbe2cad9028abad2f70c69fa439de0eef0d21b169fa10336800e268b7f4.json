{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tommy\\\\codes\\\\Sistema-Gestao-Web\\\\frontend\\\\src\\\\pages\\\\EditarProduto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditarProduto() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    nome: '',\n    descricao: '',\n    preco: '',\n    quantidade: '',\n    categoria: ''\n  });\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(true);\n  useEffect(() => {\n    const carregarProduto = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await api.get('/produtos', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const produto = res.data.find(p => p.id === parseInt(id));\n        if (produto) {\n          setForm({\n            nome: produto.nome,\n            descricao: produto.descricao,\n            preco: produto.preco,\n            quantidade: produto.quantidade,\n            categoria: produto.categoria\n          });\n        } else {\n          setMensagem('❌ Produto não encontrado');\n        }\n      } catch (err) {\n        console.error('Erro ao carregar produto:', err);\n        setMensagem('❌ Erro ao carregar produto');\n      } finally {\n        setCarregando(false);\n      }\n    };\n    carregarProduto();\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    try {\n      await api.put(`/produtos/${id}`, form, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMensagem('✅ Produto atualizado com sucesso!');\n      setTimeout(() => navigate('/produtos'), 1500);\n    } catch (err) {\n      console.error('Erro ao atualizar produto:', err);\n      setMensagem('❌ Erro ao atualizar produto');\n    }\n  };\n  if (carregando) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"carregando\",\n    children: \"Carregando produto...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-editar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"titulo\",\n      children: \"Editar Produto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `mensagem ${mensagem.includes('✅') ? 'sucesso' : 'erro'}`,\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-editar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome\",\n        value: form.nome,\n        onChange: e => setForm({\n          ...form,\n          nome: e.target.value\n        }),\n        required: true,\n        className: \"input-form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Descri\\xE7\\xE3o\",\n        value: form.descricao,\n        onChange: e => setForm({\n          ...form,\n          descricao: e.target.value\n        }),\n        className: \"input-form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Pre\\xE7o\",\n        value: form.preco,\n        onChange: e => setForm({\n          ...form,\n          preco: e.target.value\n        }),\n        required: true,\n        className: \"input-form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Categoria\",\n        value: form.categoria,\n        onChange: e => setForm({\n          ...form,\n          categoria: e.target.value\n        }),\n        className: \"input-form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        value: form.quantidade,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"botao botao-editar\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(EditarProduto, \"pRB3O1PTvsU/arydW5W9mmuGsig=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditarProduto;\nexport default EditarProduto;\nvar _c;\n$RefreshReg$(_c, \"EditarProduto\");","map":{"version":3,"names":["React","useEffect","useState","api","useParams","useNavigate","jsxDEV","_jsxDEV","EditarProduto","_s","id","navigate","form","setForm","nome","descricao","preco","quantidade","categoria","mensagem","setMensagem","carregando","setCarregando","carregarProduto","token","localStorage","getItem","res","get","headers","Authorization","produto","data","find","p","parseInt","err","console","error","handleSubmit","e","preventDefault","put","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onSubmit","type","placeholder","value","onChange","target","required","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/tommy/codes/Sistema-Gestao-Web/frontend/src/pages/EditarProduto.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../services/api';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction EditarProduto() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({\r\n    nome: '',\r\n    descricao: '',\r\n    preco: '',\r\n    quantidade: '',\r\n    categoria: ''\r\n  });\r\n  const [mensagem, setMensagem] = useState('');\r\n  const [carregando, setCarregando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const carregarProduto = async () => {\r\n      const token = localStorage.getItem('token');\r\n      try {\r\n        const res = await api.get('/produtos', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        const produto = res.data.find(p => p.id === parseInt(id));\r\n        if (produto) {\r\n          setForm({\r\n            nome: produto.nome,\r\n            descricao: produto.descricao,\r\n            preco: produto.preco,\r\n            quantidade: produto.quantidade,\r\n            categoria: produto.categoria\r\n          });\r\n        } else {\r\n          setMensagem('❌ Produto não encontrado');\r\n        }\r\n      } catch (err) {\r\n        console.error('Erro ao carregar produto:', err);\r\n        setMensagem('❌ Erro ao carregar produto');\r\n      } finally {\r\n        setCarregando(false);\r\n      }\r\n    };\r\n\r\n    carregarProduto();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      await api.put(`/produtos/${id}`, form, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setMensagem('✅ Produto atualizado com sucesso!');\r\n      setTimeout(() => navigate('/produtos'), 1500);\r\n    } catch (err) {\r\n      console.error('Erro ao atualizar produto:', err);\r\n      setMensagem('❌ Erro ao atualizar produto');\r\n    }\r\n  };\r\n\r\n  if (carregando) return <p className=\"carregando\">Carregando produto...</p>;\r\n\r\n  return (\r\n    <div className=\"container-editar\">\r\n      <h2 className=\"titulo\">Editar Produto</h2>\r\n\r\n      {mensagem && (\r\n        <p className={`mensagem ${mensagem.includes('✅') ? 'sucesso' : 'erro'}`}>\r\n          {mensagem}\r\n        </p>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"form-editar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nome\"\r\n          value={form.nome}\r\n          onChange={e => setForm({ ...form, nome: e.target.value })}\r\n          required\r\n          className=\"input-form\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Descrição\"\r\n          value={form.descricao}\r\n          onChange={e => setForm({ ...form, descricao: e.target.value })}\r\n          className=\"input-form\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Preço\"\r\n          value={form.preco}\r\n          onChange={e => setForm({ ...form, preco: e.target.value })}\r\n          required\r\n          className=\"input-form\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Categoria\"\r\n          value={form.categoria}\r\n          onChange={e => setForm({ ...form, categoria: e.target.value })}\r\n          className=\"input-form\"\r\n        />\r\n\r\n        <input type=\"hidden\" value={form.quantidade} readOnly />\r\n\r\n        <button type=\"submit\" className=\"botao botao-editar\">Salvar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditarProduto;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}